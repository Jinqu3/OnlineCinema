# Generated by Django 5.0.3 on 2024-04-18 18:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'db_table': 'category',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=56, unique=True)),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
                'db_table': 'country',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
                'db_table': 'genre',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('surname', models.CharField(max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('description', models.TextField(blank=True, max_length=1000, null=True)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Мужчина'), ('F', 'Женщина')], max_length=1)),
                ('photo', models.ImageField(null=True, upload_to='members/')),
            ],
            options={
                'verbose_name': 'Участник',
                'verbose_name_plural': 'Участники',
                'db_table': 'member',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'verbose_name': 'Должность',
                'verbose_name_plural': 'Должности',
                'db_table': 'post',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name': 'Роль',
                'verbose_name_plural': 'Роли',
                'db_table': 'role',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=130, unique=True)),
                ('slogan', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('poster', models.ImageField(null=True, upload_to='films/')),
                ('year', models.IntegerField(choices=[(1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024)], default=2024)),
                ('release_date_world', models.DateField(blank=True, null=True)),
                ('release_date_russia', models.DateField(blank=True, null=True)),
                ('budjet', models.IntegerField(blank=True, null=True)),
                ('gross', models.IntegerField(blank=True, null=True)),
                ('duration', models.DateTimeField(blank=True, null=True)),
                ('rating', models.CharField(blank=True, max_length=3, null=True)),
                ('mpaa_rating', models.CharField(blank=True, max_length=5, null=True)),
                ('trailer_url', models.CharField(blank=True, max_length=256, null=True)),
                ('url', models.CharField(blank=True, max_length=256, null=True)),
                ('categories', models.ManyToManyField(related_name='film_categories', to='cinema.category')),
                ('countries', models.ManyToManyField(related_name='film_countries', to='cinema.country')),
                ('genres', models.ManyToManyField(related_name='film_genres', to='cinema.genre')),
            ],
            options={
                'verbose_name': 'Фильм',
                'verbose_name_plural': 'Фильмы',
                'db_table': 'film',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FilmMemberPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.film')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.member')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.post')),
            ],
            options={
                'db_table': 'film_member_post',
                'managed': True,
                'unique_together': {('film', 'member', 'post')},
            },
        ),
        migrations.AddField(
            model_name='film',
            name='members',
            field=models.ManyToManyField(related_name='film_members', through='cinema.FilmMemberPost', to='cinema.member'),
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(null=True, upload_to='photo/')),
                ('film_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cinema.film')),
            ],
            options={
                'verbose_name': 'Фото',
                'verbose_name_plural': 'Фотографии',
                'db_table': 'photo',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='member',
            name='posts',
            field=models.ManyToManyField(related_name='member_posts', to='cinema.post'),
        ),
        migrations.AddField(
            model_name='film',
            name='members_posts',
            field=models.ManyToManyField(related_name='film_member_posts', through='cinema.FilmMemberPost', to='cinema.post'),
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star', models.DecimalField(decimal_places=0, max_digits=2)),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.film')),
            ],
            options={
                'verbose_name': 'Оцененка',
                'verbose_name_plural': 'Оценки',
                'db_table': 'score',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('surname', models.CharField(max_length=30)),
                ('lastname', models.CharField(blank=True, max_length=30, null=True)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Мужчина'), ('F', 'Женщина')], max_length=1)),
                ('login', models.CharField(max_length=30)),
                ('password', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=256)),
                ('photo', models.ImageField(upload_to='users/')),
                ('favorite', models.ManyToManyField(related_name='favorite', to='cinema.film')),
                ('roles', models.ManyToManyField(to='cinema.role')),
                ('scores', models.ManyToManyField(related_name='scores', through='cinema.Score', to='cinema.film')),
                ('views', models.ManyToManyField(related_name='viewed', to='cinema.film')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'db_table': '_user',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='score',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.user'),
        ),
        migrations.AlterUniqueTogether(
            name='member',
            unique_together={('name', 'surname')},
        ),
        migrations.AlterUniqueTogether(
            name='score',
            unique_together={('film', 'user')},
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('review_id', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.TextField(max_length=5000)),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.film')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.user')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'db_table': 'review',
                'managed': True,
                'unique_together': {('film', 'user')},
            },
        ),
    ]
